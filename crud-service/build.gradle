plugins {
    id 'org.springframework.boot'
    id 'java'
    id 'org.openapi.generator' version '7.4.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common-dto')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    
    // R2DBC Dependencies
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'io.r2dbc:r2dbc-pool:1.0.0.RELEASE'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'
    // H2 Database for local development
    runtimeOnly 'com.h2database:h2'
    implementation 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
    
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql:1.19.3'
    testImplementation 'org.testcontainers:r2dbc:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'au.com.dius.pact:consumer:4.6.8'
    testImplementation 'au.com.dius.pact:provider:4.6.8'
    testImplementation 'au.com.dius.pact.consumer:junit5:4.6.8'
    testImplementation 'au.com.dius.pact.provider:junit5:4.6.8'

    // Resilience4J Dependencies
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-reactor:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-retry:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-timelimiter:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-bulkhead:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-micrometer:2.1.0'

    // Logging
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'
    implementation 'org.slf4j:slf4j-api'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/crud-service/src/main/resources/api/crud-api.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.galaxyviewtower.hotel.crud.api"
    modelPackage = "com.galaxyviewtower.hotel.crud.model.gen"
    invokerPackage = "com.galaxyviewtower.hotel.crud.invoker"
    library = "spring-boot"
    configOptions = [
        interfaceOnly: "true",
        useTags: "true",
        dateLibrary: "java8",
        reactive: "true",
        useJakartaEe: "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

sourceSets.main.java.srcDirs += ["$buildDir/generated/src/main/java"]

tasks.named('compileJava') {
    dependsOn tasks.named('openApiGenerate')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

