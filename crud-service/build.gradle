plugins {
    id 'org.springframework.boot'
    id 'java'
    id 'org.openapi.generator' version '7.4.0'
}

dependencies {
    implementation project(':common-dto')
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'io.r2dbc:r2dbc-h2'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.glassfish:jakarta.el:4.0.2'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/crud-service/src/main/resources/api/crud-api.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.galaxyviewtower.hotel.crud.api"
    modelPackage = "com.galaxyviewtower.hotel.crud.model.gen"
    invokerPackage = "com.galaxyviewtower.hotel.crud.invoker"
    library = "spring-boot"
    configOptions = [
        interfaceOnly: "true",
        useTags: "true",
        dateLibrary: "java8",
        reactive: "true"
    ]
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}

sourceSets.main.java.srcDirs += ["$buildDir/generated/src/main/java"]

tasks.named('compileJava') {
    dependsOn tasks.named('openApiGenerate')
}

