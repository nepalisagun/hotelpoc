spring:
  application:
    name: user-service
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/hotel_user_db
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

server:
  port: 8081

jwt:
  secret: ${JWT_SECRET:your-256-bit-secret-key-here}
  expiration: 3600 # 1 hour in seconds
  refresh-expiration: 604800 # 7 days in seconds

resilience4j:
  ratelimiter:
    instances:
      userRegistration:
        limitForPeriod: 10
        limitRefreshPeriod: 1m
        timeoutDuration: 5s
      userLogin:
        limitForPeriod: 20
        limitRefreshPeriod: 1m
        timeoutDuration: 5s
      passwordReset:
        limitForPeriod: 5
        limitRefreshPeriod: 1h
        timeoutDuration: 5s
  circuitbreaker:
    instances:
      userService:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  bulkhead:
    instances:
      userService:
        maxConcurrentCalls: 20
        maxWaitDuration: 500ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
