spring:
  application:
    name: user-service-test
  r2dbc:
    url: r2dbc:h2:mem://testdb;DB_CLOSE_DELAY=-1
    username: sa
    password:
  security:
    jwt:
      secret: testSecretKey1234567890123456789012345678901234567890
      expiration: 3600000
      refresh-expiration: 86400000

resilience4j:
  ratelimiter:
    instances:
      userRegistration:
        limitForPeriod: 5
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
      userLogin:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 100ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  circuitbreaker:
    instances:
      userService:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  bulkhead:
    instances:
      userService:
        maxConcurrentCalls: 20
        maxWaitDuration: 500ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.galaxyviewtower.hotel.user: DEBUG
    io.r2dbc.h2: DEBUG
